        // GetContext Method
        // В tt.cs при БД подключенной

        private static LogisticDatabaseEntities _context;

        public static LogisticDatabaseEntities GetContext()
        {
            if (_context == null)
                _context = new LogisticDatabaseEntities();
            return _context;
        }

        // Вывести данные Окно Админа Xaml

        <DataGrid AutoGenerateColumns="False" IsReadOnly="True" Grid.Row="1" Grid.Column="2" Grid.ColumnSpan="9" Grid.RowSpan="5" FontSize="14"
                  Margin="0 10 0 0" x:Name="GridClients" BorderBrush="Black" BorderThickness="1">
            <DataGrid.Columns>
                <DataGridTextColumn Binding="{Binding ID_Клиент}" Header="ID" Width="*"/>
                <DataGridTextColumn Binding="{Binding Контактное_лицо}" Header="Контактное лицо" Width="*"/>
                <DataGridTextColumn Binding="{Binding Телефон}" Header="Телефон" Width="*"/>
                <DataGridTextColumn Binding="{Binding Email}" Header="Email" Width="*"/>
                <DataGridTextColumn Binding="{Binding Название_компании}" Header="Название компании" Width="*"/>
            </DataGrid.Columns>
        </DataGrid>


          // Удаление данных там же на кнопку отдельную

            var drForRemoving = GridClients.SelectedItems.Cast<Клиент>().ToList();
            if (MessageBox.Show($"Вы точно хотите удалить следующие {drForRemoving.Count()} элементов?", "Внимание",
                MessageBoxButton.YesNo, MessageBoxImage.Question) == MessageBoxResult.Yes)
            {
                try
                {
                    LogisticDatabaseEntities.GetContext().Клиент.RemoveRange(drForRemoving);
                    LogisticDatabaseEntities.GetContext().SaveChanges();
                    MessageBox.Show("Все данные удалены!");
                    GridClients.ItemsSource = LogisticDatabaseEntities.GetContext().Клиент.ToList();
                }
                catch (System.Data.Entity.Infrastructure.DbUpdateException)
                {
                    MessageBox.Show("Ошибка при удалении: есть связанные записи в базе данных");
                }
                catch (Exception ex)
                {
                    MessageBox.Show($"Ошибка: {ex.Message}");
                }
            }

  // Добавление с выводом в одном окне 

  public ClientsWindow()
    {
        InitializeComponent();
        LoadData();
    }

    private void LoadData()
    {
        GridClients.ItemsSource = LogisticDatabaseEntities.GetContext().Клиент.ToList();
    }

    // Добавление
    private void AddButton_Click(object sender, RoutedEventArgs e)
    {
        try {
            var newClient = new Клиент { Контактное_лицо = NameTextBox.Text }; // Каждые данные по очереди прописать
        
            LogisticDatabaseEntities.GetContext().Клиент.Add(newClient);
            LogisticDatabaseEntities.GetContext().SaveChanges();
        
            LoadData(); 
            NameTextBox.Clear(); // также добавить названия других textbox
        }
        catch (Exception ex)
        {
          MessageBox.Show($"Ошибка: {ex.Message}");
        }
        
    }
